version: "3"

services:
  web:
#    build:
#      dockerfile: Dockerfile
    build: .
    ports:
      - 8080:8000
#      - 8000:8080 # for AWS
    command: bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
#    command: bash -c "python3 manage.py collectstatic --no-imput && python3 manage.py migrate && gunicorn --workers=2 -b=127.0.0.1:8080 generate_teachers.wsgi"  # for AWS
    depends_on:
      - db
    volumes:
      - .:/myfirstdockerapp
#      - /home/ubuntu/test/static:/static # for AWS
#    .env_file:
#      - .env

  db:
    image: postgres
#    env_file: # for AWS
#      - .env
    environment:  # comment for run on AWS
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=admin_db

  rabbitmq:
    image: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - 15672:15672

  celery:
    build: .
    command: bash -c "celery -A generate_teachers worker -l info -B"
    volumes:
      - .:/myfirstdockerapp
    depends_on:
      - web
      - rabbitmq
    working_dir: /myfirstdockerapp

  memcached:
    image: memcached
    ports:
      - 11211:11211
    entrypoint:
      - memcached
      - -m 64
